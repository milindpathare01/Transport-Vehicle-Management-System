

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import java.util.regex.*;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author milin
 */
public class staff extends javax.swing.JFrame {

    /**
     * Creates new form staff
     */
    public staff() {
        initComponents();
        showDate();
        showTime();
        auto_id();
        update_table();
        fname.requestFocus();
    }
    
    
    public void update_table(){
         int c;
            try {
            Class.forName("com.mysql.jdbc.Driver");
            conn cc = new conn();
         
            ResultSet rs = cc.s.executeQuery("select * from staff");
            ResultSetMetaData rsmd = rs.getMetaData();
            c = rsmd.getColumnCount();
            
            DefaultTableModel Model = (DefaultTableModel)stafftable.getModel();
            Model.setRowCount(0);
            
            while(rs.next()){
                Vector v2 =new Vector();
                for(int a=1;a<=c;a++){
                  v2.add(rs.getString("ID"));
                  v2.add(rs.getString("FName"));
                  v2.add(rs.getString("MName"));
                  v2.add(rs.getString("LName"));
                  v2.add(rs.getString("address"));
                  v2.add(rs.getString("gender"));
                  v2.add(rs.getString("mobile"));    
                  v2.add(rs.getString("alternate"));
                  v2.add(rs.getString("email")); 
                }
                Model.addRow(v2);
            }
        } 
        catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vehicle.class.getName()).log(Level.SEVERE, null, ex);
        } 
        catch (SQLException ex) {
            java.util.logging.Logger.getLogger(vehicle.class.getName()).log(Level.SEVERE, null, ex);
        }     
        
    }
    
     void showDate()
    {
       Date d =new Date();
       SimpleDateFormat s = new SimpleDateFormat("dd-MM-yyyy");
       date.setText(s.format(d));
     }
    
    void showTime()
    {
        new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Date d = new Date();
                SimpleDateFormat s = new SimpleDateFormat("hh:mm:ss a");
                time.setText(s.format(d));
            }
        }
        ).start();
        
    } 
    Connection con;
    PreparedStatement insert;
    ResultSet rs;
    public void auto_id(){
        try{
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/milind?autoRecoonect=true&useSSL=false","root","");
            Statement s = con.createStatement();
            ResultSet rs = s.executeQuery("select Max(id) from staff");
            rs.next();
            rs.getString("Max(id)");
            if(rs.getString("Max(id)")==null){
                id.setText("001");
            }
            else{
                Long ID = Long.parseLong(rs.getString("Max(id)").substring(2,rs.getString("Max(id)").length()));
                ID++;
                id.setText(""+String.format("%03d",ID));
            }
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(this, ex);
        } 
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        time = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        exit = new javax.swing.JButton();
        minimize = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        fname = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        mname = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        lname = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        gender = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        mobile = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        alternate = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        address = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        stafftable = new javax.swing.JTable();
        search = new javax.swing.JTextField();
        searchbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/staff3-removebg-preview.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 204));
        jLabel2.setText("ADD STAFF");

        time.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        time.setForeground(new java.awt.Color(0, 102, 204));
        time.setText("TIME");

        date.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        date.setForeground(new java.awt.Color(0, 102, 204));
        date.setText("DATE");

        exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/close lgo.png"))); // NOI18N
        exit.setBorder(null);
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minimize logo.png"))); // NOI18N
        minimize.setBorder(null);
        minimize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minimizeActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 204));
        jLabel3.setText("ID :-");
        jLabel3.setToolTipText("");

        id.setEditable(false);
        id.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 204));
        jLabel4.setText("FIRST NAME :-");

        fname.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        fname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fnameActionPerformed(evt);
            }
        });
        fname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fnameKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 51, 204));
        jLabel5.setText("MIDDLE NAME :-");

        mname.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        mname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mnameKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 51, 204));
        jLabel6.setText("LAST NAME :-");

        lname.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lnameActionPerformed(evt);
            }
        });
        lname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lnameKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 51, 204));
        jLabel8.setText("GENDER :-");

        gender.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT", "MALE", "FEMALE" }));
        gender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 51, 204));
        jLabel9.setText("MOBILE :-");

        mobile.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        mobile.setForeground(new java.awt.Color(0, 51, 204));
        mobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mobileKeyTyped(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 51, 204));
        jLabel10.setText("Alternate MOB :-");

        alternate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        alternate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                alternateKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                alternateKeyTyped(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 51, 204));
        jLabel11.setText("ADDRESS");

        address.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 51, 204));
        jLabel12.setText("EMAIL ID :-");

        email.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                emailKeyReleased(evt);
            }
        });

        save.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        save.setForeground(new java.awt.Color(0, 51, 204));
        save.setText("SAVE");
        save.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        update.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        update.setForeground(new java.awt.Color(0, 51, 204));
        update.setText("UPDATE ");
        update.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        delete.setForeground(new java.awt.Color(0, 51, 204));
        delete.setText("DELETE ");
        delete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        reset.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        reset.setForeground(new java.awt.Color(0, 51, 204));
        reset.setText("RESET");
        reset.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 0, 51));
        jButton5.setText("HOME");
        jButton5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        stafftable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        stafftable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "FName", "MName", "LName", "address", "gender", "mobile", "alternate", "email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        stafftable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stafftableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(stafftable);

        search.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        search.setText("Search by First Name");
        search.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchFocusLost(evt);
            }
        });
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchKeyTyped(evt);
            }
        });

        searchbtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        searchbtn.setForeground(new java.awt.Color(0, 51, 204));
        searchbtn.setText("SEARCH");
        searchbtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(time)
                                .addGap(32, 32, 32)
                                .addComponent(date))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(217, 217, 217)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 204, Short.MAX_VALUE)
                        .addComponent(minimize)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel11))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(fname, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                                        .addComponent(mname)
                                        .addComponent(lname)
                                        .addComponent(address)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addGap(67, 67, 67)
                                    .addComponent(gender, 0, 307, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(alternate))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addGap(67, 67, 67)
                                    .addComponent(mobile))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(132, 132, 132)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(time)
                                .addComponent(date))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(searchbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(exit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                                .addComponent(minimize, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 686, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(30, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(mname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(mobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(alternate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
         JFrame frame = new JFrame("EXIT");
        if(JOptionPane.showConfirmDialog(frame,"Confirm if you want to CLOSE","EXIT",
                JOptionPane.YES_NO_CANCEL_OPTION)==JOptionPane.YES_NO_OPTION)
        {
            System.exit(0);
        }
    }//GEN-LAST:event_exitActionPerformed

    private void minimizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minimizeActionPerformed
        // TODO add your handling code here:
        this.setExtendedState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimizeActionPerformed

    private void fnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fnameActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_fnameActionPerformed

    private void lnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lnameActionPerformed

    private void genderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        String ID = id.getText();
        String Fname = fname.getText();
        String Mname = mname.getText();
        String Lname = lname.getText();
        String Address = address.getText();
        
      
        String Gender = gender.getSelectedItem().toString();
        String Mobile = mobile.getText();
        String Alternate = alternate.getText();
        String Email = email.getText();
        
         if(emptyvalue() & emailvalidate() & contactvalidate() & alternatevalidate()){
             
             try{
          
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/milind?autoRecoonect=true&useSSL=false","root","");
            insert = con.prepareStatement("insert into staff (id,fname,mname,lname,address,gender,mobile,alternate,email) values(?,?,?,?,?,?,?,?,?)");
            insert.setString(1, ID);
            insert.setString(2, Fname);
            insert.setString(3,Mname );
            insert.setString(4, Lname);
            insert.setString(5, Address);
            insert.setString(6, Gender);
            insert.setString(7, Mobile);
            insert.setString(8, Alternate);
            insert.setString(9, Email);
            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "One Member is Added!!");
            
            clear();
            auto_id();  
            update_table();
            fname.requestFocus();
             
             }
        catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vehicle.class.getName()).log(Level.SEVERE, null, ex);
        } 
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Can not Save Duplicate Record!!");
        }
         
         }
    }//GEN-LAST:event_saveActionPerformed
       public boolean emailvalidate(){
           Pattern p = Pattern.compile("[a-zA-Z0-9][a-zA-Z0-9._]*@[a-zA-Z0-9]+([.][a-zA-Z]+)+");
           Matcher match= p.matcher(email.getText());
           if(match.find() && match.group().equals(email.getText())){
               return true;
           }else{
               JOptionPane.showMessageDialog(this, "Envalid Email Address !!","warning",JOptionPane.WARNING_MESSAGE);
               return false;
           }
       }
      public boolean contactvalidate(){
        String contact = mobile.getText();
         if(contact.matches("^[0-9]*$") && contact.length()==10){
             return true;
         }else{
             JOptionPane.showMessageDialog(this, "Envalid Contact number!!","warning",JOptionPane.WARNING_MESSAGE);
             return false;
         }
      }
    
    
    private void stafftableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stafftableMouseClicked
        // TODO add your handling code here:
         
        try{
            int index = stafftable.getSelectedRow();
            DefaultTableModel df = (DefaultTableModel)stafftable.getModel();
            String ID = df.getValueAt(stafftable.getSelectedRow(),0).toString();
            String FNAME = df.getValueAt(stafftable.getSelectedRow(),1).toString();
            String MNAME = df.getValueAt(stafftable.getSelectedRow(),2).toString();
            String LNAME = df.getValueAt(stafftable.getSelectedRow(),3).toString(); 
            String ADDRESS = df.getValueAt(stafftable.getSelectedRow(),4).toString();
           
            String GENDER = df.getValueAt(stafftable.getSelectedRow(),5).toString(); 
            String MOBILE = df.getValueAt(stafftable.getSelectedRow(),6).toString();
            String ALTERNATE = df.getValueAt(stafftable.getSelectedRow(),7).toString();
            String EMAIL = df.getValueAt(stafftable.getSelectedRow(),8).toString();
            
            id.setText(ID);
            fname.setText(FNAME);
            mname.setText(MNAME);
            lname.setText(LNAME);
            address.setText(ADDRESS);
            gender.setSelectedItem(GENDER);
            mobile.setText(MOBILE);
            alternate.setText(ALTERNATE);
            email.setText(EMAIL);
            
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex);
        }
    }//GEN-LAST:event_stafftableMouseClicked

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        
        clear();
    }//GEN-LAST:event_resetActionPerformed

     
     
    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        String FName = fname.getText();
        String MName = mname.getText();
        String LName = lname.getText();
        String Address = address.getText();
        
        
        
        String Gender = gender.getSelectedItem().toString();
        String Mobile = mobile.getText();
        String Alternate = alternate.getText();
        String Email = email.getText();
        
        DefaultTableModel MODEL = (DefaultTableModel)stafftable.getModel();
        int selectedRow = stafftable.getSelectedRow();
        
        if(emptyupdate() & emailvalidate() & contactvalidate() & alternatevalidate()){
            
              try {
            int ID = Integer.parseInt(MODEL.getValueAt(selectedRow,0).toString());
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/milind?autoRecoonect=true&useSSL=false","root","");
            insert = con.prepareStatement("update staff SET fname=?,mname=?,lname=?,address=?,gender=?,mobile=? , alternate=? , email=? where id=?" );
            
            
            insert.setString(1,FName);
            insert.setString(2,MName);
            insert.setString(3,LName);
            insert.setString(4,Address);
            
            insert.setString(5,Gender);
            insert.setString(6,Mobile);
            insert.setString(7,Alternate);
            insert.setString(8,Email);
            insert.setInt(9, ID);
            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this,"Member Updated!!");
            update_table();
            clear();  
            auto_id();
            fname.requestFocus();
        } 
        catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vehicle.class.getName()).log(Level.SEVERE, null, ex);
        } 
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,ex);
        }
        }
        
    }//GEN-LAST:event_updateActionPerformed
public boolean emptydelete(){
        
        
        if(id.getText().isEmpty() | fname.getText().isEmpty() | mname.getText().isEmpty() | lname.getText().isEmpty() 
                | address.getText().isEmpty() | mobile.getText().isEmpty() | gender.getSelectedItem().toString().isEmpty() ){
            JOptionPane.showMessageDialog(this, "Please Select Record!!","warning",JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }  

public boolean emptyupdate(){
        
        
        if(id.getText().isEmpty() | fname.getText().isEmpty() | mname.getText().isEmpty() | lname.getText().isEmpty() 
                | address.getText().isEmpty() | mobile.getText().isEmpty() | gender.getSelectedItem().toString().isEmpty() ){
            JOptionPane.showMessageDialog(this, "Please Select Record!!","warning",JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    } 
public boolean alternatevalidate(){
         String contact = alternate.getText();
         if(contact.matches("^[0-9]*$") && contact.length()==10){
             return true;
         }else{
             JOptionPane.showMessageDialog(this, "Envalid Alternate number!!","warning",JOptionPane.WARNING_MESSAGE);
             return false;
         }
    }  
    
    
    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        DefaultTableModel MODEL = (DefaultTableModel)stafftable.getModel();
        int selectedRow = stafftable.getSelectedRow();
        if(emptydelete()){
       
        try {
            int ID = Integer.parseInt(MODEL.getValueAt(selectedRow,0).toString());
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/milind?autoRecoonect=true&useSSL=false","root","");
            insert = con.prepareStatement("DELETE FROM staff WHERE id=?" );
            insert.setInt(1, ID);
            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this,"Member Deleted!");
            update_table();
            auto_id();
            clear();   
            fname.requestFocus();
           
        }
        catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vehicle.class.getName()).log(Level.SEVERE, null, ex);
        } 
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,ex);
        }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        homepage hm = new homepage();
        this.setVisible(false);
        hm.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void fnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fnameKeyTyped
        // TODO add your handling code here:
        char TestChar = evt.getKeyChar();
        if(!(Character.isAlphabetic(TestChar)))
        evt.consume();
    }//GEN-LAST:event_fnameKeyTyped

    private void mnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mnameKeyTyped
        // TODO add your handling code here:
        char TestChar = evt.getKeyChar();
        if(!(Character.isAlphabetic(TestChar)))
        evt.consume();
    }//GEN-LAST:event_mnameKeyTyped

    private void lnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lnameKeyTyped
        // TODO add your handling code here:
        char TestChar = evt.getKeyChar();
        if(!(Character.isAlphabetic(TestChar)))
        evt.consume();
    }//GEN-LAST:event_lnameKeyTyped

    private void mobileKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mobileKeyTyped
        // TODO add your handling code here:
        char TestChar = evt.getKeyChar();
        if(!(Character.isDigit(TestChar)))
        evt.consume();
    }//GEN-LAST:event_mobileKeyTyped

    private void alternateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_alternateKeyTyped
        // TODO add your handling code here:
        char TestChar = evt.getKeyChar();
        if(!(Character.isDigit(TestChar)))
        evt.consume();
    }//GEN-LAST:event_alternateKeyTyped

    private void emailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_emailKeyReleased

    private void alternateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_alternateKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_alternateKeyReleased

    private void searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnActionPerformed
        // TODO add your handling code here:
        String SEARCH = search.getText();
        if(search.getText().isEmpty()|| SEARCH.matches("^[0-9]*$")){
            JOptionPane.showMessageDialog(this, "Please Write First Name!!","warning",JOptionPane.WARNING_MESSAGE);
            search.setText("Search by First Name");
        }
        else{
         try{
          Class.forName("com.mysql.jdbc.Driver");
          con = DriverManager.getConnection("jdbc:mysql://localhost:3306/milind?autoRecoonect=true&useSSL=false","root","");
          insert = con.prepareStatement("SELECT * FROM staff WHERE fname=?");
          String FNAME = search.getText();
          insert.setString(1, FNAME);
          rs = insert.executeQuery();
          if(rs.next()==false){
              JOptionPane.showMessageDialog(this, "Record Can Not Found!!","Warning",JOptionPane.WARNING_MESSAGE);
              clear(); 
              search.setText("Search by First Name");
          }
          else{
              id.setText(rs.getString("id"));
              fname.setText(rs.getString("fname"));
              mname.setText(rs.getString("mname"));
              lname.setText(rs.getString("lname"));
              address.setText(rs.getString("address"));
              gender.setSelectedItem(rs.getString("gender"));
              mobile.setText(rs.getString("mobile"));
              alternate.setText(rs.getString("alternate"));
              email.setText(rs.getString("email"));
             
              search.setText("Search by First Name");
          }
         
          
      } catch (ClassNotFoundException ex) {  
            Logger.getLogger(vehicle.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(vehicle.class.getName()).log(Level.SEVERE, null, ex);
        }  
        } 
    }//GEN-LAST:event_searchbtnActionPerformed

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_searchKeyReleased

    private void searchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFocusGained
        // TODO add your handling code here:
         if(search.getText().equals(("Search by First Name")))
        {
            search.setText("");
        }
    }//GEN-LAST:event_searchFocusGained

    private void searchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFocusLost
        // TODO add your handling code here:
         if(search.getText().equals(("")))
        {
            search.setText("Search by First Name");
        }
    }//GEN-LAST:event_searchFocusLost

    private void searchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyTyped
        // TODO add your handling code here:
        
    }//GEN-LAST:event_searchKeyTyped
    
    
    
    public boolean emptyvalue(){
        
        
        if(id.getText().isEmpty() | fname.getText().isEmpty() | mname.getText().isEmpty() | lname.getText().isEmpty() 
                | address.getText().isEmpty() | mobile.getText().isEmpty() | gender.getSelectedItem().toString().isEmpty() ){
            JOptionPane.showMessageDialog(this, "Can Not Save Empyt Record!!","warning",JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }  
    
    public void clear(){
        auto_id();
        fname.requestFocus();
        fname.setText("");
        mname.setText("");
        lname.setText("");
        address.setText("");
        
        gender.setSelectedIndex(0);
        mobile.setText("");
        alternate.setText("");
        email.setText("");
        
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new staff().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address;
    private javax.swing.JTextField alternate;
    private javax.swing.JLabel date;
    private javax.swing.JButton delete;
    private javax.swing.JTextField email;
    private javax.swing.JButton exit;
    private javax.swing.JTextField fname;
    private javax.swing.JComboBox<String> gender;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lname;
    private javax.swing.JButton minimize;
    private javax.swing.JTextField mname;
    private javax.swing.JTextField mobile;
    private javax.swing.JButton reset;
    private javax.swing.JButton save;
    private javax.swing.JTextField search;
    private javax.swing.JButton searchbtn;
    private javax.swing.JTable stafftable;
    private javax.swing.JLabel time;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
