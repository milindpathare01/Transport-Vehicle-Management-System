
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Random;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author milin
 */
public class vehicle extends javax.swing.JFrame {

    /**
     * Creates new form vehicle
     */
    
    
    public vehicle() {
        initComponents();
        update_table();
        auto_id();
        showDate();
        showTime();
        code.requestFocus();
        
    }
    
    void showDate()
    {
       Date d =new Date();
       SimpleDateFormat s = new SimpleDateFormat("dd-MM-yyyy");
       date.setText(s.format(d));
     }
    
    void showTime()
    {
        new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Date d = new Date();
                SimpleDateFormat s = new SimpleDateFormat("hh:mm:ss a");
                time.setText(s.format(d));
            }
        }
        ).start();
        
    }
    
    public void auto_id(){
         try{
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/milind?autoRecoonect=true&useSSL=false","root","");
            Statement s = con.createStatement();
            ResultSet rs = s.executeQuery("select Max(id) from vehicle");
            rs.next();
            rs.getString("Max(id)");
            if(rs.getString("Max(id)")==null){
                id.setText("001");
            }
            else{
                Long ID = Long.parseLong(rs.getString("Max(id)").substring(2,rs.getString("Max(id)").length()));
                ID++;
                id.setText(""+String.format("%03d",ID));
            }
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(this, ex);
        } 
    }
    
      /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        code = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        type = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        number = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        model = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        chessis = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        engin = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        home = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        minimize = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        vehicletable = new javax.swing.JTable();
        time = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        searchbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jcbsmall-removebg-preview (1).png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 51));
        jLabel2.setText("ADD VEHICLE");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 153));
        jLabel3.setText("ID :-");

        id.setEditable(false);
        id.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 153));
        jLabel4.setText("PRODUCT CODE :-");

        code.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 51, 153));
        jLabel6.setText("TYPE :-");

        type.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT", "JCB", "DUMPER", "CRANE" }));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 51, 153));
        jLabel7.setText("VEHICLE NUMBER :-");

        number.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 51, 153));
        jLabel8.setText("MODEL :-");

        model.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 51, 153));
        jLabel9.setText("CHESSIS NO. :-");

        chessis.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 51, 153));
        jLabel10.setText("ENGINE NO. :-");

        engin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        save.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        save.setForeground(new java.awt.Color(0, 51, 204));
        save.setText("SAVE ");
        save.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        update.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        update.setForeground(new java.awt.Color(0, 51, 153));
        update.setText("UPDATE");
        update.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        delete.setForeground(new java.awt.Color(0, 51, 153));
        delete.setText("DELETE");
        delete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        reset.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        reset.setForeground(new java.awt.Color(0, 51, 153));
        reset.setText("RESET");
        reset.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        home.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        home.setForeground(new java.awt.Color(255, 0, 51));
        home.setText("HOME");
        home.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });

        exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/close lgo.png"))); // NOI18N
        exit.setBorder(null);
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minimize logo.png"))); // NOI18N
        minimize.setBorder(null);
        minimize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minimizeActionPerformed(evt);
            }
        });

        vehicletable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        vehicletable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CODE", "NUMBER", "TYPE", "MODEL", "CHESSIS ", "ENGIN "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        vehicletable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vehicletableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(vehicletable);

        time.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        time.setForeground(new java.awt.Color(0, 102, 204));
        time.setText("TIME");

        date.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        date.setForeground(new java.awt.Color(0, 102, 204));
        date.setText("Date ");

        search.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        search.setForeground(new java.awt.Color(51, 51, 51));
        search.setText("Search by Code");
        search.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchFocusLost(evt);
            }
        });
        search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                searchMouseReleased(evt);
            }
        });
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
        });

        searchbtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        searchbtn.setForeground(new java.awt.Color(0, 51, 204));
        searchbtn.setText("SEARCH");
        searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(467, 467, 467))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(time)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)))
                .addComponent(jLabel2)
                .addGap(38, 38, 38)
                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchbtn)
                .addGap(94, 94, 94)
                .addComponent(minimize, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel4)
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(code, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(date)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(number, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(130, 130, 130)
                                .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(110, 110, 110)
                                .addComponent(model, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(64, 64, 64)
                                .addComponent(chessis, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(68, 68, 68)
                                .addComponent(engin, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(home, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 910, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(searchbtn))
                            .addComponent(jLabel2)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(time)
                                    .addComponent(date))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(52, 52, 52))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(minimize)
                                    .addComponent(exit))
                                .addGap(129, 129, 129)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel6))
                            .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel8))
                            .addComponent(model, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel9))
                            .addComponent(chessis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel10))
                            .addComponent(engin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(home, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(95, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
       
        Connection con;
        PreparedStatement insert;
        ResultSet rs;
        DefaultTableModel df;
    public void update_table(){
        int c;
            try {
            Class.forName("com.mysql.jdbc.Driver");
            conn cc = new conn();
         
            ResultSet rs = cc.s.executeQuery("select * from vehicle");
            ResultSetMetaData rsmd = rs.getMetaData();
            c = rsmd.getColumnCount();
            
            DefaultTableModel Model = (DefaultTableModel)vehicletable.getModel();
            Model.setRowCount(0);
            
            while(rs.next()){
                Vector v2 =new Vector();
                for(int a=1;a<=c;a++){
                  v2.add(rs.getString("id"));
                  v2.add(rs.getString("code"));
                  v2.add(rs.getString("number"));
                  v2.add(rs.getString("type"));
                  v2.add(rs.getString("model"));
                  v2.add(rs.getString("chessis"));
                  v2.add(rs.getString("engine"));                 
                }
                Model.addRow(v2);
            }
        } 
        catch (ClassNotFoundException ex) {
            Logger.getLogger(vehicle.class.getName()).log(Level.SEVERE, null, ex);
        } 
        catch (SQLException ex) {
            Logger.getLogger(vehicle.class.getName()).log(Level.SEVERE, null, ex);
        }     
        } 
    
    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        String Code = code.getText();
        String Number = number.getText();
        String Type = type.getSelectedItem().toString();
        String Model =model.getText();
        String Chessis = chessis.getText();
        String Engine = engin.getText();
        
        DefaultTableModel MODEL = (DefaultTableModel)vehicletable.getModel();
        int selectedRow = vehicletable.getSelectedRow();
        
        if(emptyupdate()){
            
              try {
            int ID = Integer.parseInt(MODEL.getValueAt(selectedRow,0).toString());
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/milind?autoRecoonect=true&useSSL=false","root","");
            insert = con.prepareStatement("update vehicle SET code=?,number=?,type=?,model=?,chessis=?,engine=? where id=?" );
          
            insert.setString(1,Code);
            insert.setString(2,Number);
            insert.setString(3,Type);
            insert.setString(4,Model);
            insert.setString(5,Chessis);
            insert.setString(6,Engine);
            insert.setInt(7, ID);
            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this,"Vehicle Updated!!");
           
            update_table();
            auto_id();
            clear();  
            code.requestFocus();
        } 
        catch (ClassNotFoundException ex) {
            Logger.getLogger(vehicle.class.getName()).log(Level.SEVERE, null, ex);
        } 
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,ex);
        }
        }
        
    }//GEN-LAST:event_updateActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
         JFrame frame = new JFrame("EXIT");
        if(JOptionPane.showConfirmDialog(frame,"Confirm if you want to CLOSE","EXIT",
                JOptionPane.YES_NO_CANCEL_OPTION)==JOptionPane.YES_NO_OPTION)
        {
            System.exit(0);
        }
    }//GEN-LAST:event_exitActionPerformed

    private void minimizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minimizeActionPerformed
        // TODO add your handling code here:
         this.setExtendedState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimizeActionPerformed

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        // TODO add your handling code here:
         homepage homepage = new homepage();
        homepage.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_homeActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        clear();
        
    }//GEN-LAST:event_resetActionPerformed
        
    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
       String Id = id.getText();
        String Code = code.getText();
        String Number = number.getText();
        String Type = type.getSelectedItem().toString();
        String Model =model.getText();
        String Chessis = chessis.getText();
        String Engine = engin.getText();
        
        if(emptyvalue()){
       
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/milind?autoRecoonect=true&useSSL=false","root","");
            insert = con.prepareStatement("insert into vehicle(id,code,number,type,model,chessis,engine)values(?,?,?,?,?,?,?)");
            insert.setString(1, Id);
            insert.setString(2,Code);
            insert.setString(3,Number);
            insert.setString(4,Type);
            insert.setString(5,Model);
            insert.setString(6,Chessis);
            insert.setString(7,Engine);
            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this,"Vehicle Added!!");
           
            update_table();
            clear();  
            auto_id();
           code.requestFocus();
        } 
        catch (ClassNotFoundException ex) {
            Logger.getLogger(vehicle.class.getName()).log(Level.SEVERE, null, ex);
        } 
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Can not Save Duplicate Record!!!","warning",JOptionPane.WARNING_MESSAGE);
        }
        }
        
    }//GEN-LAST:event_saveActionPerformed

    private void vehicletableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vehicletableMouseClicked
        // TODO add your handling code here:
        int selectedRow = vehicletable.getSelectedRow();
        DefaultTableModel df = (DefaultTableModel)vehicletable.getModel();
        
        try{
            String ID = df.getValueAt(vehicletable.getSelectedRow(),0).toString();
            String Code = df.getValueAt(vehicletable.getSelectedRow(),1).toString();
            String Number = df.getValueAt(vehicletable.getSelectedRow(),2).toString(); 
            String Type = df.getValueAt(vehicletable.getSelectedRow(),3).toString(); 
            String Model = df.getValueAt(vehicletable.getSelectedRow(),4).toString(); 
            String Chessis = df.getValueAt(vehicletable.getSelectedRow(),5).toString(); 
            String Engine = df.getValueAt(vehicletable.getSelectedRow(),6).toString(); 
            
            id.setText(ID);
            code.setText(Code);
            number.setText(Number);
            type.setSelectedItem(Type);
            model.setText(Model);
            chessis.setText(Chessis);
            engin.setText(Engine);
            
            
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex);
        }
    }//GEN-LAST:event_vehicletableMouseClicked

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_idActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        DefaultTableModel MODEL = (DefaultTableModel)vehicletable.getModel();
        int selectedRow = vehicletable.getSelectedRow();
        if( code.getText().isEmpty() && number.getText().isEmpty() && model.getText().isEmpty() && chessis.getText().isEmpty() && engin.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please Select Record!!","Info",JOptionPane.INFORMATION_MESSAGE);
        }
        else{
        try {
            int ID = Integer.parseInt(MODEL.getValueAt(selectedRow,0).toString());
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/milind?autoRecoonect=true&useSSL=false","root","");
            insert = con.prepareStatement("DELETE FROM vehicle WHERE id=?" );
            insert.setInt(1, ID);
            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this,"Vehicle Deleted!");
           
            update_table();
            auto_id();
            clear();  
            code.requestFocus();
        }
        catch (ClassNotFoundException ex) {
            Logger.getLogger(vehicle.class.getName()).log(Level.SEVERE, null, ex);
        } 
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,ex);
        }
        }
        
    }//GEN-LAST:event_deleteActionPerformed

    private void searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnActionPerformed
       
        
      try{
          Class.forName("com.mysql.jdbc.Driver");
          con = DriverManager.getConnection("jdbc:mysql://localhost:3306/milind?autoRecoonect=true&useSSL=false","root","");
          insert = con.prepareStatement("SELECT * FROM VEHICLE WHERE code=?");
          String Code = search.getText();
          insert.setString(1, Code);
          rs = insert.executeQuery();
          if(rs.next()==false){
              JOptionPane.showMessageDialog(this, "Record Can Not Found!!","Warning",JOptionPane.WARNING_MESSAGE);
              clear(); 
              search.setText("Search by Code");
          }
          else{
              id.setText(rs.getString("id"));
              code.setText(rs.getString("code"));
              number.setText(rs.getString("number"));
              type.setSelectedItem(rs.getString("type"));
              model.setText(rs.getString("model"));
              chessis.setText(rs.getString("chessis"));
              engin.setText(rs.getString("engine"));
              
              
              search.setText("Search by Code");
          }
          
          
      } catch (ClassNotFoundException ex) {  
            Logger.getLogger(vehicle.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(vehicle.class.getName()).log(Level.SEVERE, null, ex);
        }  
       
    }//GEN-LAST:event_searchbtnActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchActionPerformed

    private void searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_searchMouseClicked

    private void searchMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMouseReleased
        // TODO add your handling code here:  
    }//GEN-LAST:event_searchMouseReleased

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_searchKeyReleased

    private void searchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFocusGained
        // TODO add your handling code here:
        if(search.getText().equals(("Search by Code")))
        {
            search.setText("");
        }
    }//GEN-LAST:event_searchFocusGained

    private void searchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFocusLost
        // TODO add your handling code here:
        if(search.getText().equals((""))){
            search.setText("Search by Code");
        }
    }//GEN-LAST:event_searchFocusLost
 
    
    public boolean emptyvalue(){
        if( code.getText().isEmpty() | number.getText().isEmpty() | model.getText().isEmpty() |
                chessis.getText().isEmpty() | engin.getText().isEmpty() | type.getSelectedItem().toString().isEmpty()){
            
            JOptionPane.showMessageDialog(this, "Can Not Save Empty Record!!","warning",JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }
    public boolean emptyupdate(){
        if( code.getText().isEmpty()  | number.getText().isEmpty() | model.getText().isEmpty() |
                chessis.getText().isEmpty() | engin.getText().isEmpty() | type.getSelectedItem().toString().isEmpty()){
            
            JOptionPane.showMessageDialog(this, "Can Not update Empty Record!!","warning",JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }
             
    
    
    public void clear()
    {
        auto_id();
        code.setText("");
        code.requestFocus();
        number.setText("");
        type.setSelectedIndex(0);
        model.setText("");
        chessis.setText("");
        engin.setText("");  
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vehicle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(vehicle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(vehicle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vehicle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new vehicle().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField chessis;
    private javax.swing.JTextField code;
    private javax.swing.JLabel date;
    private javax.swing.JButton delete;
    private javax.swing.JTextField engin;
    private javax.swing.JButton exit;
    private javax.swing.JButton home;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton minimize;
    private javax.swing.JTextField model;
    private javax.swing.JTextField number;
    private javax.swing.JButton reset;
    private javax.swing.JButton save;
    private javax.swing.JTextField search;
    private javax.swing.JButton searchbtn;
    private javax.swing.JLabel time;
    private javax.swing.JComboBox<String> type;
    private javax.swing.JButton update;
    private javax.swing.JTable vehicletable;
    // End of variables declaration//GEN-END:variables
}
